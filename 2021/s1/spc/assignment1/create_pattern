#!/bin/bash
# Given an input parameter, cyclicly perform caesar encoding on a given phrase.
# Check for the input switches:

# Loop for as many input arguments are given
while [[ $1 -gt 0 ]] ;
	current=$1
	shift;
	do
		# Read the input argument
		if [[ $current = "-n" ]]
		then
			parameter=$1
		fi

		if [[ $current = "-u" ]] ;
		then
			upper=true ;
		fi
done

# Get the phrase to be encoded from the user
read -p "Enter the phrase to be encoded: " phrase

# The cyclic pattern repeats after 26 so calculate the remainder of the input divided by 26
n=$(expr $parameter % 26)

# Encode the given phrase:
# Upper Case:
if [[ $upper = "true" ]]
then
	translation="'[A-Z]' '[B-ZA]'"
else
	# Lower Case:
	translation="'[a-z]' '[b-za]'"
fi

# Loop n times
for ((i=0; i<n; i++))
	do
		# Cycle each character once
		phrase=$( echo "$phrase" | tr $translation )
done

# Write the encoded phrase to output
echo "$phrase"